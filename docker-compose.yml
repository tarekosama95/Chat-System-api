version: "3"
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sidekiq
    command: bundle exec sidekiq
    volumes:
      - .:/app
    depends_on:
      - redis
      - mysql
      - elasticsearch
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379/0
      REDIS_DB: 0
      MYSQL_DATABASE: chat_api_development
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_HOST: mysql
      ELASTICSEARCH_URL: http://elasticsearch:9200
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: chat_api_development
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql_data:/var/lib/mysql
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
      - sidekiq
      - elasticsearch
    command: "./bin/rails server -b 0.0.0.0"
    environment:
      - RAILS_ENV=development
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_HOST= db
    volumes:
      - "app-storage:/rails/storage"
volumes:
  mysql_data:
  app-storage:
  esdata:
  redis_data:
